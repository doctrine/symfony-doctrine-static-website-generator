# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    doctrine.static_website.title: Symfony & Doctrine Static Website
    doctrine.static_website.subtitle: The Symfony & Doctrine Static Website Generator for PHP
    doctrine.static_website.url: http://localhost
    doctrine.static_website.keywords: [php, website, builder, doctrine, mapper, object, controller, route]
    doctrine.static_website.description: The Symfony & Doctrine Static Website Generator for PHP
    doctrine.static_website.google_analytics_tracking_id: ""

    doctrine.static_website.routes:
        homepage:
            path: /index.html
            controller: App\Controller\UserController::index

        user:
            path: /user/{username}.html
            controller: App\Controller\UserController::user
            provider: App\Requests\UserRequests::getUsers

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Repositories\UserRepository:
        factory: 'Doctrine\Bundle\DoctrineSkeletonMapperBundle\ObjectRepositoryFactory:createRepository'
        arguments:
            - '@App\DataSources\Users'
            - 'App\Repositories\UserRepository'
            - 'App\Models\User'

    Doctrine\StaticWebsiteGenerator\Controller\ControllerProvider:
        arguments:
            -
                - '@App\Controller\UserController'

    Doctrine\StaticWebsiteGenerator\Request\RequestCollectionProvider:
        arguments:
            -
                - '@App\Requests\UserRequests'
